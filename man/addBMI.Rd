% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addVariables.R
\name{addBMI}
\alias{addBMI}
\title{Adding BMI data to your final file}
\usage{
addBMI(crea.dataset, bmi.dataset, NbOfCores = 4L, filename)
}
\arguments{
\item{crea.dataset}{dataset with creatinine ReadCodes, at least three creatinine measurements per patient.}

\item{NbOfCores}{how much cores do you want to use for your parallel process? Will be added to getOption() from mclapply. Default is 4 (should work on any PC), but can be changed to less or more.}

\item{filename}{name of the final .txt file your output will be saved to. Can be a path also. Should be a txt file because of write.table function inside.}

\item{bmiFile}{file with extracted BMI codes from SIR data (codes starting with" 22K"); duplicates removed, NA free. All columns from SIR data can be present.}
}
\value{
this function returns nothig. It saves the output to your filename automatically
}
\description{
This function takes your dataset (crea.rep or similar) and aligns BMI event.dates with creatinine measurement event.dates.
It will add a BMI column with NAs at the beginning and then fill it with corresponding BMI values while running.
It loops through each patient ID, finds all event.dates and CodeValues for BMI in this patient, finds the closest event.date
to creatinine event.date (not necessarily after the creatinine event), and saves this BMI value. It is saving a new dataframe row by row, in every loop.
}
\details{
it uses parallel lapply - mclapply from "parallel" package. It's recommended to either run it in the background of your PC or on the cluster.
}
\examples{
\dontrun{
mclapply_out <- addBMI(crea.dataset = crea.rep, bmi.dataset = bmiData, NbOfCores =  4L, filename = "~/mydoc/permit/creaWithBMI.txt")
}

}
